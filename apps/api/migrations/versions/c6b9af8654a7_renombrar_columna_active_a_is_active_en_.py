"""Renombrar columna active a is_active en User model

Revision ID: c6b9af8654a7
Revises: 002_ocr_log
Create Date: 2025-08-22 19:12:34.401134

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c6b9af8654a7'
down_revision = '002_ocr_log'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('registration_audit_logs',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('registration_id', sa.UUID(), nullable=False),
    sa.Column('action', sa.Enum('CREATE', 'UPDATE', 'DELETE', name='audit_actions'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('changes', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('registration_audit_logs', schema=None) as batch_op:
        batch_op.create_index('idx_audit_action', ['action'], unique=False)
        batch_op.create_index('idx_audit_registration_id', ['registration_id'], unique=False)
        batch_op.create_index('idx_audit_timestamp', ['timestamp'], unique=False)
        batch_op.create_index('idx_audit_user_id', ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_registration_audit_logs_registration_id'), ['registration_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_registration_audit_logs_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_registration_audit_logs_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('ocr_processing_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_ocr_logs_created_at'))
        batch_op.drop_index(batch_op.f('idx_ocr_logs_engine'))
        batch_op.drop_index(batch_op.f('idx_ocr_logs_registration'))
        batch_op.create_index(batch_op.f('ix_ocr_processing_logs_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_ocr_processing_logs_ocr_engine'), ['ocr_engine'], unique=False)
        batch_op.create_index(batch_op.f('ix_ocr_processing_logs_registration_id'), ['registration_id'], unique=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('users_name_key'), type_='unique')
        batch_op.drop_index(batch_op.f('ix_users_name'))
        batch_op.create_index(batch_op.f('ix_users_name'), ['name'], unique=True)
        batch_op.drop_column('is_active')

    with op.batch_alter_table('weight_registrations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_registrations_deleted_at'))
        batch_op.create_index(batch_op.f('ix_weight_registrations_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_weight_registrations_deleted_at'), ['deleted_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_weight_registrations_registered_by'), ['registered_by'], unique=False)
        batch_op.create_index(batch_op.f('ix_weight_registrations_supplier'), ['supplier'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('weight_registrations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_weight_registrations_supplier'))
        batch_op.drop_index(batch_op.f('ix_weight_registrations_registered_by'))
        batch_op.drop_index(batch_op.f('ix_weight_registrations_deleted_at'))
        batch_op.drop_index(batch_op.f('ix_weight_registrations_created_at'))
        batch_op.create_index(batch_op.f('idx_registrations_deleted_at'), ['deleted_at'], unique=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
        batch_op.drop_index(batch_op.f('ix_users_name'))
        batch_op.create_index(batch_op.f('ix_users_name'), ['name'], unique=False)
        batch_op.create_unique_constraint(batch_op.f('users_name_key'), ['name'])

    with op.batch_alter_table('ocr_processing_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ocr_processing_logs_registration_id'))
        batch_op.drop_index(batch_op.f('ix_ocr_processing_logs_ocr_engine'))
        batch_op.drop_index(batch_op.f('ix_ocr_processing_logs_created_at'))
        batch_op.create_index(batch_op.f('idx_ocr_logs_registration'), ['registration_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_ocr_logs_engine'), ['ocr_engine'], unique=False)
        batch_op.create_index(batch_op.f('idx_ocr_logs_created_at'), ['created_at'], unique=False)

    with op.batch_alter_table('registration_audit_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_registration_audit_logs_user_id'))
        batch_op.drop_index(batch_op.f('ix_registration_audit_logs_timestamp'))
        batch_op.drop_index(batch_op.f('ix_registration_audit_logs_registration_id'))
        batch_op.drop_index('idx_audit_user_id')
        batch_op.drop_index('idx_audit_timestamp')
        batch_op.drop_index('idx_audit_registration_id')
        batch_op.drop_index('idx_audit_action')

    op.drop_table('registration_audit_logs')
    # ### end Alembic commands ###
