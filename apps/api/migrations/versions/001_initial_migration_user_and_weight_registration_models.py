"""Initial migration: User and WeightRegistration models

Revision ID: 001_initial
Revises: 
Create Date: 2025-08-20 12:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '001_initial'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Create users table
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('operator', 'supervisor', name='user_roles'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False, default=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_users_name'), 'users', ['name'], unique=False)
    
    # Create weight_registrations table
    op.create_table('weight_registrations',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('weight', sa.DECIMAL(precision=8, scale=3), nullable=False),
    sa.Column('cut_type', sa.Enum('jamÃ³n', 'chuleta', name='cut_types'), nullable=False),
    sa.Column('supplier', sa.String(length=255), nullable=False),
    sa.Column('registered_by', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('photo_url', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('sync_status', sa.Enum('synced', 'pending', 'error', name='sync_statuses'), nullable=False, default='synced'),
    sa.CheckConstraint('weight > 0', name='check_weight_positive'),
    sa.ForeignKeyConstraint(['registered_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_registrations_created_at', 'weight_registrations', ['created_at'], unique=False)
    op.create_index('idx_registrations_supplier', 'weight_registrations', ['supplier'], unique=False)
    op.create_index('idx_registrations_cut_type', 'weight_registrations', ['cut_type'], unique=False)
    op.create_index('idx_registrations_user', 'weight_registrations', ['registered_by'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_registrations_user', table_name='weight_registrations')
    op.drop_index('idx_registrations_cut_type', table_name='weight_registrations')
    op.drop_index('idx_registrations_supplier', table_name='weight_registrations')
    op.drop_index('idx_registrations_created_at', table_name='weight_registrations')
    op.drop_table('weight_registrations')
    op.drop_index(op.f('ix_users_name'), table_name='users')
    op.drop_table('users')
    # Drop enums
    op.execute('DROP TYPE IF EXISTS sync_statuses')
    op.execute('DROP TYPE IF EXISTS cut_types')
    op.execute('DROP TYPE IF EXISTS user_roles')
    # ### end Alembic commands ###